- 오픈소스 소프트웨어 개요

OSS (open source software)
-> 누구나 특별한 제한 없이 그 코드를 보고 사용할 수 있는 오픈소스 라이선스를 만족하는 SW이다.

OSI (open source initiative)
-> OSI가 인증하는 공개 소스 소프트웨어(OSS) 인증 마크
OSS의 의미: 소프트웨어의 소스코드를 자유롭게 읽고, 수정 및 재배포가 가능

- 자유 소프트웨어에서 출발한 OSS
리처드 스톨먼이 자유 소프트웨어 재단 서립
GUN(자유 소프트웨어의 운영체제이자 SW) 프로젝트와 관련된 소프트웨어에서 자유를 중시

Copyleft 개념
제작자에게 저작권은 인정하면서 어느 누구나 소프트웨어를 복제해 사용할 수 있는 권리를 주어야 한다는 개념을 갖는 SW 의미

- 오픈소스 방식의 의미
오픈소스 지원 관리 서버를 통해서 소스코드를 활용해 여러 개발자가 협업하고 공유하며 이를 지원하는 방안을 마련하게 됨
협업 방식으로는 서로 간에 소스코드 사용과 변경 및 공유할 수 있도록 커뮤니티 프로덕션과 동료 평가에 의존

- 오픈소스 소프트웨어 장단점

> 소스코드를 공개
누구든 보다 쉽게 연구하여, 새로운 프로그래밍 기술을 개발
학생은 오픈소스 라이센스를 통해 코드를 편집하고, 친구 또는 보다 광범위한 오픈소스 커뮤니티와 공유
기존 오픈소스 프로젝트를 수정해 실질적으로 커뮤니티에 기여하는 등 실습이 가능

> 커스터마이징과 혁신 지원
기업이 구체적인 요구 사항에 맞게 커스터마이징 가능
원래 소스코드에는 포함되지 않았던 새로운 사용자 경험으로 혁신할 수 있도록 지원

> 단점
공개의 의무
품질보증 및 유지보수, 보안 등의 어려움

- 오픈소스 개발 모델
대부분의 웹을 지원하는 서비스 스택 모델: LAMP
Linux: 오픈소스 운영 체제(OS)이자 세계 최대 규모의 오픈소스 프로젝트
Apache: 초기 웹에서 핵심 역할을 한 오픈소스 크로스 플랫폼 웹 서버
MySQL: 대부분의 데이터베이스 기반 웹 애플리케이션에서 사용하는
오픈소스 관계형 데이터베이스 관리 시스템
PHP: 소프트웨어 개발에 사용되는 범용 스크립팅 언어
(가끔 Perl 또는 Python 언어로 대체됨)


- 빅데이터, 인공지능 분야
> Python
https://github.com/python/cpython 
> Scikit-learn
https://github.com/scikit-learn/scikit-learn
> Tensorflow
https://github.com/tensorflow/tensorflow
> Pytorch
https://github.com/pytorch/pytorch

--------------------------------------------------------------------------------------------------------------------------------------------------------

2. 오픈소스소프트웨어 저작권

오픈소스 SW 개발자가 만들어 놓은 저작권의 범위에 따라 해당 소프트웨어를 사용

1. GPL(GNU - General Public License)
- 자유소프트웨어재단(FSS)에서 만든 라이선스
- 자유소프트웨어재단 설립자인 리처드 스톨만에 의해서 만들어졌음
  가장 많이 알려진 카피레프트에 속한 라이선스
- 프로그램은 목적이나 형태의 제한없이 사용이 가능
- GPL을 따른 프로그램을 사용해서 2차 저작물을 만들면 2차 저작물도 반드시
  GPL 라이센스를 명시해야 함
- 프로그램을 이후 수정하고 배포하는 모든 경우에 무조건 GPL로 공개를 해야 

- GPL 라이센스 적용 예
리눅스 커널, Git, 마리아 DB, 워드프레스, 파이어폭스(v2.0) 등

2. AGPL(GNU - Affero GPL)
> GPL을 기반으로 만든 라이선스

- 네트워크로 상호 작용하는 소프트웨어의 소스코드도 공개해야 한다는 조항을 추가한 라이선스
  어떤 개발자가 프로그램의 소스코드를 수정해서 사용하고 프로그램을 배포하지 않았을 때
  발생할 수 있는 소스코드의 공유 불가 현상을 해결하기 위해 만들어짐

- 서버에서 프로그램을 실행해서 다른 사용자들과 통신 중
실행되고 있는 프로그램의 소스코드를 사용자들이 다운로드할 수 있도록 해야 하는 조항을 포함

- AGPL 라이센스 적용 예
몽고DB 등

3. LGPL(GNU - Lesser GPL)
> 보다 완화된 GPL 라이선스

- GPL 라이센스를 사용할 때 반드시 소스코드를 다시 GPL로 공개해야 하는 부담 때문에 실무에서
 사용되기 어려운 점을 보완하기 위해서 만들어진 라이선스
 전체 소스코드를 공개하지 않고 사용된 오픈소스 라이브러리에 대한 소스코드만 공개

- LGPL 라이센스 적용 예
파이어폭스(v2.1) 등

4. Apache License
아파치 라이센스 소스코드를 수정하고 배포 시 아파치 라이센스 버전 2.0을 꼭 포함시켜야 하고 아파치재단의 소프트웨어라는 사실을 명시
- Apache License 적용 예
안드로이드, 하둡 등

5. MIT License
> MIT에서 학생들을 지원하기 위해서 만든 라이선스

- 라이센스와 저작권 관련 명시 의무
- 가장 느슨한 조건을 가지고 있어서 많은 사람들이 사용하기 용이
- 사용자가 최소의 제한사항으로 원래 코드를 수정할 수 있도록 허용하는 무료 소프트웨어 라이센스

- MIT License 라이센스 적용 예
부트스트랩, Angular.js, Backbone.js, jQuery





